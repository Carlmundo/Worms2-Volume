<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AD8/XwA/P18APz9fAD8/XwA/P18APj1eAEREYgBHSGEJQEFWjTs8UN84OU3uOTpN7jg4
        TeE+PlG+SkpgZjg4TgJHR0dcUFBQ/09PUPhOTk/8Tk5P/U5OT/1QUFL8VFRV9VVVVexTU1PsUFBQ7E9P
        T+xPT0/sT09P7FBQUP9MTEy9Q0RlAENEZQBDRGUAQ0RlAENEZQBCQ2UARkZlEEJDWOFHSF//bnCQ/3p8
        n/96fKD/d3ib/2Vnhv9FRV3/ODlM51FRUZpPT0//T09P/05OTv9TU1P/VVVV/01NTf9GRkb/RUVF/0lJ
        Sf9RUVH/VVVV/1BQUP9OTk7/T09P/1BQUPQ2N1AANjdQADY3UAA2N1AANTZPADU2UAA/QFiySUpg/5ib
        xv+7vvH/uLzu/7i87v+3u+3/tLfp/6Cjz/9iY4H/RUVM8k9PT/9PT0//VVVV/05QUf87OTj/NBsT/zEN
        Av8wDAH/MxEG/zcqJv9ERkf/VVVV/1FRUf9OTk7/T09P9EdHWwBHR1sAR0dbAEdHWwBHR1sAR0dbMTc3
        S/+Bg6j/wMT4/6ap1/+mqdf/pqnX/6ap1/+nqtj/trrs/7a67P9TVF//Tk5O/1VVVf9JTk//MiEb/ywN
        A/8gRlH/FnSR/xR+n/8aYnj/JyQi/y8OA/87PDz/U1RV/1FRUf9PT0/0SkxjAEpMYwBKTGMASkxjAEpM
        YwBGR115TE1m/6Sn1f+useH/pqnX/6ap1/+mqdf/pqnX/6ap1/+kp9X/tLjp/21vgP9TU1P/TFBR/zEc
        Fv8rGhT/EI+8/wDT//8A3///AN///wDc//8EvPn/IE5d/y0KAP89Pj7/VVZW/09PT/RISmMASEpjAEhK
        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
        //9GRkL/AAAA/7S0sv//////srXd/52h0/+mqdf/srXm/5WXwf9KSlL/UVFR/0xMTP88PDz/SkpK/1NT
        U/9VVVX/VVVV/1RUVP9VVVX/U1NT/1FRUf9AQED/QkJC/1JSUv9PT0/0RUVlOkFCX/+tr77/AwMA/zg3
        M//7/P///////0pKR/8AAAD/zs7N//////+2ud7/nJ/S/6ap1/+qrdz/qazb/1FSXP9TU1P/SEhI/yIi
        Iv9ERET/VFRU/09PT/9PT0//T09P/09PT/9QUFD/U1NT/ywsLP8vLy//VVVV/09PT/RERlmKSUpt/+Xn
        +v+trKT/09LO/9ja9///////v7+7/4GBgf///////////7O13f+doNP/pqnX/6eq2P+ztuf/V1hk/09P
        T/9PT0//SUlJ/05OTv9PT0//T09P/09PT/9PT0//T09P/09PT/9QUFD/SkpK/0tLS/9RUVH/T09P9Dg5
        TcldX4b/4OL+///////29/v/naDT/9/g8P/////////////////r7Pb/oKPU/6Sn1v+mqdf/pqnX/7W4
        6v9eX2z/TExM/0xMTP9RUVH/TU1N/0tLS/9MTEz/TExM/0xMTP9MTEz/TExM/0tLS/9QUFD/T09P/0pK
        Sv9QUFD0NzdL43V3nv/W2v//+Pr//8XI7/+Pk83/vcHv////////////9vf//62w3v+cn9L/p6rX/6ap
        1/+mqdf/trnr/2Jjef9bW1v/Wlpa9VlZWexZWVnsWVlZ7FlZWexZWVnsWVlZ7FlZWexZWVnsWVlZ7FlZ
        WexZWVnsXFxc/1NTU61CQ1vOamyK/19hfv8dHjb/ZmiM/7O25P97faf/gYOr/5yewv+Ym87/s7bv/7S3
        5/+ipdL/pqnX/6eq2P+ytuf/X2B+/z4+VP9RUmggU1RoAFJTaABSU2gAUlNoAFJTaABSU2gAUlNoAP//
        /wD///8A////AP///wD///8A////AE5OZog+P1P/BwcI/wAAAP9VVm7/uLvv/xgYH/8AAAD/AAAA/wAA
        AP8AAAD/hYes/7m98P+kp9X/uLvt/52gzP9AQVj/SUpf3FNUYwBTVGMAU1RjAFNUYwBTVGMAU1RjAFNU
        YwBTVGMA////AP///wD///8A////AP///wD///8AR0tcKjw9Vv9xcpT/xMf8/8DE+P+rrt3/nJ/L/29x
        kP9NTmP/NjdG/yUlMP+Hia//tbnr/7a66/+3uuz/XV56/zs8Uv9GR2eBQkNkAENEZABDRGQAQ0RkAENE
        ZABDRGQAQ0RkAENEZAD///8A////AP///wD///8A////AP///wBcYHEATU5jjD0+VP9yc5X/rK/e/7i8
        7f++wfb/ycz//8rO///Iy///ztH//7/D8/+1uOv/oKPP/1tceP84OU//TU1i001NXABLSl0AS0tdAEtL
        XQBLS10AS0tdAEtLXQBLS10AS0tdAP///wD///8A////AP///wD///8A////AIGAgAB3d3wASUlhrjc3
        Tf9OUGn/e32h/5aZw/+ipdH/qKvZ/6ms2/+jptP/k5a//29yk/9FRV3/OzxQ/0lKZuBQUF4SWlpPAFlY
        UgBZWFIAWVhSAFlYUgBZWFIAWVhSAFlYUgBZWFIA////AP///wD///8A////AP///wD///8AioqGAICA
        fwBQUGcASEljdkBAVv86O1D/Q0Rb/09Qaf9XWHP/V1h0/09Qaf9AQVj/OTlN/0NEWv9JSmOZTU5oA1BR
        XgBXV1MAVVVVAFVVVQBVVVUAVVVVAFVVVQBVVVUAVVVVAFVVVQD///8A////AP///wD///8A////AP//
        /wCEhIMAe3t8AFFRaABFR14AQEBVEUVFWm9HSWCxQ0Ra2EBBVupAQVbrQ0Ra2khJYLBNTmZwREZXGT9B
        WgBPT2sAUFFeAFdWUwBVVVUAVVVVAFVVVQBVVVUAVVVVAFVVVQBVVVUAVVVVAP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A//////4AAAD8AAAA/AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAA+AAAAPgA
        AADwAAAA4AAAAOAAAADgAAAA4AAAAMAAAADAAAAAgAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/wAA
        P/8AAD//gAB//8AAf//gAP//8AP///////8=
</value>
  </data>
</root>